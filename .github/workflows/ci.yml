name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:24.0.5-dind
        privileged: true

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîë Log in to GitHub Container Registry (optional)
        if: false
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚öôÔ∏è Create environment file for server
        run: |
          mkdir -p Server
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> Server/.env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> Server/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> Server/.env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> Server/.env
          echo "PORT=1234" >> Server/.env
          echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> Server/.env
          echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> Server/.env
          echo "NODE_ENV=production" >> Server/.env

      - name: ‚öôÔ∏è Create environment file for client
        run: |
          mkdir -p Client
          echo "REACT_APP_API_URL=http://server:1234/" >> Client/.env

      - name: üêã Build and start containers
        run: |
          docker compose build
          docker compose up -d

      - name: ‚è± Wait for server to start
        run: |
          echo "üïê Waiting for server to start..."
          for i in {1..20}; do
            sleep 5
            if curl -s http://localhost:1234 > /dev/null; then
              echo "‚úÖ Server is up!"
              exit 0
            fi
            echo "‚è≥ Still waiting... ($i/20)"
          done
          echo "‚ùå Server failed to start"
          docker compose logs
          exit 1

      - name: üßπ Stop and clean up containers
        if: always()
        run: docker compose down -v
