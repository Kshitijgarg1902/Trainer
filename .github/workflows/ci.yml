name: CI Build and Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout your repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Create .env file for server
      # (since GitHub Actions doesn‚Äôt have your local .env)
      - name: Create .env for server
        run: |
          mkdir -p Server
          echo "PORT=1234" >> Server/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> Server/.env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> Server/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> Server/.env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> Server/.env

      # Step 4: Build and start containers
      - name: Build and start containers
        run: |
          docker compose up -d --build
          echo "üïê Waiting for server to start..."
          for i in {1..15}; do
            if curl -f http://localhost:1234 >/dev/null 2>&1; then
              echo "‚úÖ Server is up!"
              exit 0
            fi
            echo "‚è≥ Still waiting... ($i/15)"
            sleep 5
          done
          echo "‚ùå Server failed to start in time. Printing logs..."
          docker compose logs server
          exit 1

      # Step 5: Check running containers
      - name: List running containers
        run: docker ps -a

      # Step 6: Stop containers after test
      - name: Shut down Docker Compose
        if: always()
        run: docker compose down
